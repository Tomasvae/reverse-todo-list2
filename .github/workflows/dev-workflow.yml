name: Dev Workflow

on:
  push:
    branches:
      - dev

permissions:
  contents: write

jobs:
  dev-workflow:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v3


      - name: Dependencies install for backend
        run: |
          cd backend
          npm install


      - name: Tests for backend
        run: |
          cd backend
          npm test


      - name: Dependencies install for frontend
        run: |
          cd frontend
          npm install


      - name: Tests for frontend
        run: |
          cd frontend
          npm test


      - name: Merge Dev into Main
        if: success()
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: dev
          target_branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}


      - name: Trigger Push Event on Main
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git checkout main
          git commit --allow-empty -m "Trigger push event after merge"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Install dependencies for backend after merge
        run: |
          cd backend
          npm install


      - name: Tests for backend after merge
        run: |
          cd backend
          npm test


      - name: Install dependencies for frontend after merge
        run: |
          cd frontend
          npm install

      - name: Tests for frontend after merge
        run: |
          cd frontend
          npm test


      - name: Run E2E Tests
        run: |
          node e2e-tests/test.js


      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and Push Docker Image
        run: |
          docker-compose build
          docker-compose push
